---
# we _could_ install python with asdf, but I think I'm just too used to the
# pyenv/pyenv-virtualenv interface to switch just yet.
- name: Set pyenv_bin fact
  ansible.builtin.set_fact:
    pyenv_bin: "{{ dev_home }}/.pyenv/bin/pyenv"

- name: Install pyenv
  ansible.builtin.git:
    repo: "{{ pyenv.repo_url }}"
    dest: "{{ dev_home }}/.pyenv"
    version: "{{ pyenv.version }}"

- name: Install pyenv virtualenv
  ansible.builtin.git:
    repo: "{{ pyenv_virtualenv.repo_url }}"
    dest: "{{ dev_home }}/.pyenv/plugins/pyenv-virtualenv"
    version: "{{ pyenv_virtualenv.version }}"

- name: Install python versions  # noqa: command-instead-of-shell
  ansible.builtin.shell: "{{ pyenv_bin }} install {{ item }}"
  args:
    creates: "{{ dev_home }}/.pyenv/versions/{{ item }}/bin/python"
  with_items: "{{ python_versions }}"

- name: Check current global version  # noqa: command-instead-of-shell
  ansible.builtin.shell: "{{ pyenv_bin }} global"
  register: pyenv_global_version
  changed_when: false

- name: Extract global version
  ansible.builtin.set_fact:
    pyenv_global_active: "{{ pyenv_global_version.stdout_lines | join(' ') | trim() }}"

- name: Set pyenv global version
  ansible.builtin.shell: >-
    {{ pyenv_bin }} global {{ pyenv_global }} &&
    {{ pyenv_bin }} rehash
  when: "pyenv_global is defined and pyenv_global_active != pyenv_global"
  changed_when: true

- name: Re-check current global version  # noqa: command-instead-of-shell
  ansible.builtin.shell: "{{ pyenv_bin }} global"
  register: pyenv_global_version
  changed_when: false

- name: Extract new global version
  ansible.builtin.set_fact:
    pyenv_global_active: "{{ pyenv_global_version.stdout_lines | join(' ') | trim() }}"

- name: Install pipx  # noqa: command-instead-of-shell
  ansible.builtin.shell: >-
    {{ dev_home }}/.pyenv/versions/{{ pyenv_global }}/bin/pip install pipx &&
    {{ pyenv_bin }} rehash
  args:
    creates: "{{ dev_home }}/.pyenv/versions/{{ pyenv_global }}/bin/pipx"

- name: Install pipx  # noqa: command-instead-of-shell
  ansible.builtin.shell: >-
    {{ dev_home }}/.pyenv/versions/{{ pyenv_global }}/bin/pipx install {{ item.key }}
  args:
    creates: "{{ dev_home }}/.local/bin/{{ item.value.bin }}"
  with_items: "{{ pipx_packages | dict2items }}"
